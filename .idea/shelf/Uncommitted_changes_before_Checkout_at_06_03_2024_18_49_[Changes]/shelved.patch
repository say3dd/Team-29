Index: Valhalla/resources/views/Product_files/productL.blade.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!-- @KraeBM (Bilal Mohamed) worked on all the backend, JS and blade templating of this page -->\n<!-- @ElizavetaMikheeva (Elizaveta Mikheeva) - implemented the front-end (design) of the Products webpage using CSS.  -->\n<!DOCTYPE html>\n<html>\n<head>\n\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>Products</title>\n    <link rel=\"stylesheet\" href=\"{{asset('assets/css/style_sheet.css')}}\" >\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/boxicons@latest/css/boxicons.min.css\" >\n    @vite(['resources/css/app.css', 'resources/js/app.js'])\n</head>\n\n\n    <style>\n        h1 {\n            font-family: \"Noto Sans\", sans-serif;\n            font-size: small;\n        }\n\n        h2 {\n            font-family: \"Noto Sans\", sans-serif;\n            font-size: small;\n        }\n    </style>\n\n\n<header>\n     <!-- Developed and designed the header for this page @AnthonyResuello (Anthony Resuello) -->\n  <section class = \"navbar-section\">\n    @include ('header')\n  </section>\n\n</header>\n<body>\n    <h1>\n        <div class=\"title_shape\">\n            <img class = \"title_image\" style=\"\" src=\" {{asset('assets/images_product/gaming_laptops.jpg')}}\" >\n            <p class = \"laptop_title1\" style=\"position: absolute; top: 33%; color: white; text-align: center; left: 5%; \">\n                GAMING LAPTOPS\n            </p>\n            <p class = \"title_content\" style=\"position: absolute; top: 43%; color: white; text-align: left; left: 5%; \">\n                The most portable and powerful laptops for gamers,<br>\n                creators, and professionals\n            </p>\n        </div>\n        </div>\n\n    </h1>\n    <h2>\n\n        @if(session('success'))\n            <div id=\"flash-success\" class=\"p-5 bg-[#79c753] mx-44 my-5 rounded-[5px] w-1/2 \">\n                {{session('success')}}\n                {{--                <p class=\" text-amber-200\">Hello, a message</p>--}}\n            </div>\n        @endif\n\n        <!-- This is the code for the layout of product container - where all the product will be shown -->\n<div class=\"background_shape6\">\n    <section class = \"container_for_path_buttons\">\n        <p class = \"path\" >\n            >> Home >>\n            Products >> Gaming\n            Laptops\n        </p>\n        <button class=\"button_sort\" id = \"sort-button\">\n            <img class = \"image_sort\" src=\"{{asset('assets/images_product/sort.png')}}\" alt=\"\" >\n        </button>\n        <button class=\"button_filter\" id = \"filter-button\">\n            <img class = \"image_filter\" src=\"{{asset('assets/images_product/filter.png')}}\" alt=\"\" >\n        </button>\n    </section>\n        <!-- This is the code for the filter of products , linked to the database one is for the brands other is for graphics-->\n    <div id=\"filter-container\" class=\"filters\">\n        <div class =\"scroller\">\n        <ul class=\"filters__list\">\n            <form action=\"{{URL::current()}}\" method=\"GET\">\n                <li>\n                    <p style = \"text-decoration: underline\"> Brand: </p><br>\n                    </li>\n                    <!-- for each brand/graphics, it assigns the checked area as empty, once filled with the brands/graphics\n                         it selects the item and shows which is needed by its id, name and value. Also has an if statement on whether brand/graphics  is there and checkbrands is checked -->\n                @foreach ($brands as $brand)\n                @php\n                $checkedbrands = [];\n                if(isset($_GET['brands']))\n                {\n                    $checkedbrands=$_GET['brands'];\n                }\n                @endphp\n                <li>\n            <input id=\"{{$brand->brand}}\" name=\"brands[]\" value=\"{{$brand->brand}}\" type=\"checkbox\"\n            @if(in_array($brand -> brand, $checkedbrands))checked=\"checked\" @endif/>\n            <label>{{$brand->brand}}</label>\n            </li>\n            @endforeach\n            <li>\n                <p style = \"text-decoration: underline\">GPU: </p><br>\n                </li>\n            @foreach ($graphics as $graphic)\n            @php\n            $checkedGPU = [];\n            if(isset($_GET['graphics']))\n            {\n                $checkedGPU=$_GET['graphics'];\n            }\n            @endphp\n            <li>\n\n        <input id=\"{{$graphic->GPU}}\" name=\"graphics[]\" value=\"{{$graphic->GPU}}\" type=\"checkbox\"\n        @if(in_array($graphic -> GPU, $checkedGPU)) checked=\"checked\" @endif/>\n        <label>{{$graphic->GPU}}</label>\n        </li>\n        @endforeach\n            <li>\n            </div>\n                <button class = \"button_apply\" > Apply Changes </button>\n                <button class = \"button_reset\" onclick=\"resetFilters()\" > Reset </button>\n            </li>\n\n        </ul>\n\n    </form>\n\n    </div>\n    <!--Form for hidden fields so the filter request gets sent without a need for a submit button, more smoother functionality -->\n\n    <div id=\"sorting-container\" class=\"sort\">\n        <ul class=\"sort__list\">\n            <form action=\"{{URL::current()}}\" method=\"GET\" wire:model=\"sorting\">\n                <li>\n                    <p style = \"text-decoration: underline\"> Sort By: </p><br>\n                </li>\n                <li>\n           <input type=\"radio\" id=\"Newest-Arrival\" name=\"sorting\" value=\"Newest-Arrival\">\n               <label for=\"Newest-Arrival\"> Newest Arrival </label><br>\n                </li>\n                <li>\n                <input type=\"radio\" id=\"Price_HtoL\" name=\"sorting\" value=\"Price_HtoL\">\n                <label for=\"Price_HtoL\">Price: High to Low</label><br>\n                </li>\n                <li>\n                <input type=\"radio\" id=\"Price_LtoH\" name=\"sorting\" value=\"Price_LtoH\">\n                <label for=\"Price_LtoH\">Price: Low to High</label><br>\n                </li>\n                <li>\n                    <input type=\"radio\" id=\"Recommended\" name=\"sorting\" value=\"Recommended\">\n                    <label for=\"Recommended\"> Recommended</label> <br>\n                </li>\n                <li>\n        <button class = \"button_apply\" > Apply Changes </button>\n        <button class = \"button_reset\" onclick=\"resetSort()\" > Reset </button>\n        </li>\n        </form>\n        </ul>\n    </div>\n<script>\n/*Code for the submit button - works by assaigning variables with the id\n and making it so if the filter is active,\nadd those selected and when filled and enter is pressed run the funtion */\nvar sort_filter =document.getElementById(\"sort-button\");\nvar  scontainer = document.getElementById(\"sorting-container\");\nvar button_filter = document.getElementById(\"filter-button\");\nvar container = document.getElementById(\"filter-container\");\nvar input = document.querySelectorAll(\"input\");\n/* to make the apply button functionable **/\nbutton_filter.onclick = function (e) {\n  e.stopPropagation();\n  if (container.classList.contains(\"filters--active\")) {\n    container.classList.remove(\"filters--active\");\n  } else {\n    container.classList.add(\"filters--active\");\n  }\n};\n\ncontainer.onclick = function (e) {\n  e.stopPropagation();\n};\n\n\n//code for making sorting button work//\nsort_filter.onclick = function(e){\n    e.stopPropagation();\n    if(scontainer.classList.contains(\"sort--active\")){\n        scontainer.classList.remove(\"sort--active\");\n    }else {\n        scontainer.classList.add(\"sort--active\");\n    }\n};\n\nscontainer.onclick = function(e){\n    e.stopPropagation();\n};\n//\n\nwindow.onclick = function(e) {\n    if (!container.contains(e.target)) {\n        container.classList.remove(\"filters--active\");\n    }\n    if (!scontainer.contains(e.target)) {\n        scontainer.classList.remove(\"sort--active\");\n    }\n};\nconsole.log(input);\n/* Here is the code for resetting the filter section - gathers all the data input in checkbox and for each checbox, it removes them all by assinging it false.**/\nfunction resetFilters() {\n    var checkboxes = document.querySelectorAll(\"#filter-container input[type='checkbox']\");\n    checkboxes.forEach(function(checkbox) {\n        checkbox.checked = false;\n    });\n}\nfunction resetSort() {\n    var checkboxes = document.querySelectorAll(\"#sorting-container input[type='checkbox']\");\n    checkboxes.forEach(function(checkbox) {\n        checkbox.checked = false;\n    });\n}\n\n/* Where the area in products will go, and the functionality of the buttons to change pages **/\n</script>\n\n@yield('productP')\n<!-- Each button assigned an ID which presents a cetain page, leads to user interaction and less clunkiness in code. Also more fluid to use. -->\n            <section class = \"laptops_container\">\n                <div class=\"button_container\">\n                 <a href=\"{{route('productspage.id' ,['id' =>1]) }}\">\n                       <button class=\"button_to_switch_page\" style=\"margin-top: 25px;\"> 1 </button>\n                    </a>\n                  <a href=\"{{route('productspage.id', ['id' =>2]) }}\" >\n                     <button class=\"button_to_switch_page\" style=\"margin-top: 25px;\"> 2 </button>\n                  </a>\n                   <a href=\"{{route('productspage.id', ['id'=> 3]) }}\" >\n                    <button class=\"button_to_switch_page\" style=\"margin-top: 25px;\"> 3 </button>\n                   </a>\n                </div>\n            </section>\n    </h2>\n</div>\n<script>\n     /* Saves the users scroll position - if pages refreshed it goes back to it  --> */\n     function saveScrollPosition(form) {\n     var scrollY = window.scrollY || document.documentElement.scrollTop;\n    form.scrollPosition.value = scrollY;\n}\n/* Improves the position where the user last pressed the \"add to basket\": button so no need to wait for page to load before moving\nto original position It also makes sure when a user presses the home button/product button, it takes you to the top and not where\n the previous saved position is - this would be frustrating to constantly scroll up after pressing the navbar buttons */\n\ndocument.addEventListener('DOMContentLoaded', function() {\n        @if(session('restoreScroll'))\n        var savedScrollPosition = {{ session('scrollPosition', '0') }};\n\n        if (savedScrollPosition) {\n            window.scrollTo(0, savedScrollPosition);\n            @php session()->forget('restoreScroll'); session()->forget('scrollPosition'); @endphp\n        }\n        @endif\n    });\n</script>\n</body>\n<footer>\n     <!-- Developed and designed the footer for this page @AnthonyResuello (Anthony Resuello) -->\n    @include ('footer')\n</footer>\n</html>\n
===================================================================
diff --git a/Valhalla/resources/views/Product_files/productL.blade.php b/Valhalla/resources/views/Product_files/productL.blade.php
--- a/Valhalla/resources/views/Product_files/productL.blade.php	
+++ b/Valhalla/resources/views/Product_files/productL.blade.php	
@@ -245,7 +245,7 @@
      var scrollY = window.scrollY || document.documentElement.scrollTop;
     form.scrollPosition.value = scrollY;
 }
-/* Improves the position where the user last pressed the "add to basket": button so no need to wait for page to load before moving
+/* @BilalMo Improves the position where the user last pressed the "add to basket": button so no need to wait for page to load before moving
 to original position It also makes sure when a user presses the home button/product button, it takes you to the top and not where
  the previous saved position is - this would be frustrating to constantly scroll up after pressing the navbar buttons */
 
